'character',
'numeric',
rep('integer',19)))
str(data)
# Create another data frame for the output of read_csv( ) and  use str() to check its structure
library(readr)
data_new<- read_csv('C:/Users/ariel/Desktop/nba2017-player-statistics.csv',
col_types = list(Player = col_character(),
Team = col_character(),
Position = col_factor(c('C','PF','PF','SF','SG')),
Experience = col_character(),
Salary = col_double()))
str(data)
install.packages("readr")
install.packages("readr")
# Create another data frame for the output of read_csv( ) and  use str() to check its structure
library(readr)
data_new<- read_csv('C:/Users/ariel/Desktop/nba2017-player-statistics.csv',
col_types = list(Player = col_character(),
Team = col_character(),
Position = col_factor(c('C','PF','PF','SF','SG')),
Experience = col_character(),
Salary = col_double()))
str(data)
# download csv file to your working directory
# (do NOT include this code in your Rmd)
setwd('C:/Users/ariel/Desktop')
github <- "https://github.com/ucb-stat133/stat133-fall-2017/raw/master/"
file <- "data/nba2017-player-statistics.csv"
csv <- paste0(github, file)
download.file(url = csv, destfile = 'nba2017-player-statistics.csv')
# read data as a format of  read.csv( ), and use str( ) to display its structure
data <- read.csv('C:/Users/ariel/Desktop/nba2017-player-statistics.csv',stringsAsFactors = FALSE,
colClasses = c('character',
'character',
'factor',
'character',
'numeric',
rep('integer',19)))
str(data)
# Create another data frame for the output of read_csv( ) and  use str() to check its structure
library(readr)
data_new<- read_csv('C:/Users/ariel/Desktop/nba2017-player-statistics.csv',
col_types = list(Player = col_character(),
Team = col_character(),
Position = col_factor(c('C','PF','PF','SF','SG')),
Experience = col_character(),
Salary = col_double()))
str(data)
# Using read.csv and change data types explicitly
dat <- read.csv('C:/Users/ariel/Desktop/nba2017-player-statistics.csv',
colClasses = c('character',
'character',
'factor',
'character',
'numeric',
rep('integer', 19)))
# Using read.csv and change data types explicitly
dat <- read.csv('C:/Users/ariel/Desktop/nba2017-player-statistics.csv',
colClasses = c('character',
'character',
'factor',
'character',
'numeric',
rep('integer', 19)))
dat
# read data as a format of  read.csv( ), and use str( ) to display its structure
data <- read.csv('C:/Users/ariel/Desktop/nba2017-player-statistics.csv',stringsAsFactors = FALSE,
colClasses = c('character',
'character',
'factor',
'character',
'numeric',
rep('integer',19)))
str(data)
# read data as a format of  read.csv( ), and use str( ) to display its structure
data <- read.csv('C:/Users/ariel/Desktop/nba2017-player-statistics.csv',
colClasses = c('character',
'character',
'factor',
'character',
'numeric',
rep('integer',19)))
str(data)
# read data as a format of  read.csv( ), and use str( ) to display its structure
data <- read.csv('C:/Users/ariel/Desktop/nba2017-player-statistics.csv',
colClasses = c('character',
'character',
'factor',
'character',
'numeric',
rep('integer',19)))
dat
str(data)
# Load readr package first
library(readr)
# Create an object and change data types explicitly
dat2 <- read_csv('C:/Users/ariel/Desktop/nba2017-player-statistics.csv',
col_types = list(Player = col_character(),
Team = col_character(),
Position = col_factor(c('C','PF','PG','SF','SG')),
Experience = col_character(),
Salary = col_double()))
# Show the structures of each variable
str(dat2, vec.len = 1)
# Create another data frame for the output of read_csv( ) and  use str() to check its structure
library(readr)
data_new<- read_csv('C:/Users/ariel/Desktop/nba2017-player-statistics.csv',
col_types = list(Player = col_character(),
Team = col_character(),
Position = col_factor(c('C','PF','PF','SF','SG')),
Experience = col_character(),
Salary = col_double()))
data_new
str(data_new)
Experience_int <- as.integer(replace(dat$Experience,dat$Experience == "R", 0))
Experience_int
Experience_int <- as.integer(replace(dat$Experience,dat$Experience == "R", 0))
Experience_int
# Missed field goals = Field Goals Made - Field Goal Attempts
Missed_FG <- data$FGA- data$FGM
#Missed free throws
# Missed free throws = Free Throw Attempts = Free Throw made
Missed_FT <- data$FTA- data$FTM
#PTS (total points) = 2-Point field goal attempts -3-Point Field Goals
PTS <- data$FTM +2 * data$Points2 +3*data$Points3
#REB(total rebounds: offiensive and defensive)
# offensive rebounds - Defensive rebounds
REB <- data$OREB +data$DREB
#MPG(minutes per game; Not to be used when calculating EFF)
#Minutes Played during regular season / Games Played furing regular season
MPG <- data$MIN / data$GP
#EFF = (PTS + REB + AST + STL +BLK - Missed FG - Missed FT -TO) / GP
# Only add data$EFF if the variable is in data frame
data$EFF <- (PTS + REB + data$AST + data$STL + data$BLK - Missed_FG - Missed_FT - data$TO) / data$GP
summary(dat$EFF)
dat$EFF <- (PTS + REB + dat$AST + dat$STL + dat$BLK - Missed_FG - Missed_FT - dat$TO) / dat$GP
summary(dat$EFF)
hist(dat$EFF,
main = 'Histogram of Efficiency (EFF)',
xlab = 'EFF',
las = 1,
col = 'grey')
# Create histogram for the EFF
hist(data$EFF,
main = 'Histogram of Efficiency (EFF)',
xlab = 'EFF',
las = 1,
col = 'blue')
#EFF = (PTS + REB + AST + STL +BLK - Missed FG - Missed FT -TO) / GP
# Only add data$EFF if the variable is in data frame
data$EFF <- (PTS + REB + data$AST + data$STL + data$BLK - Missed_FG - Missed_FT - data$TO) / data$GP
summary(dat$EFF)
library(dplyr)
#arrange to order dat by EFF
#select to select column
#slice to slice first 10 rows
slice(select(arrange(dat,desc(dat$EFF)),c('Player','Team','Salary','EFF')),1:10)
library(dplyr)
# Use arrange() to order dat by EFF
# Use select() to select the columns
# Use slice() to select the first 10 rows
slice(select(arrange(dat, desc(dat$EFF)), c('Player', 'Team', 'Salary', 'EFF')), 1:10)
library(dplyr)
select(filter(data, EFF<10),Player)
dat[dat$EFF < 0, 1]
library(dplyr)
select(filter(data, EFF<0),Player)
# Create histogram for the EFF
hist(data$EFF,
main = 'Histogram of Efficiency (EFF)',
xlab = 'EFF',
las = 1,
col = 'blue')
library(dplyr)
#arrange to order dat by EFF
#select to select column
#slice to slice first 10 rows
slice(select(arrange(data,desc(data$EFF)),c('Player','Team','Salary','EFF')),1:10)
library(dplyr)
select(filter(data, EFF<0),Player)
# Rearrange correlation coefficients in decreasing order
correlation <- data.frame(PTS = cor(data$EFF, PTS),
REB = cor(data$EFF,REB),
AST = cor(data$EFF, data$AST),
STL = cor(data$EFF, data$STL),
BLK = cor(data$EFF, data$BLK),
Missed_FG = cor(data$EFF, - Missed_FG),
Missed_FT = cor(data$EFF, - Missed_FT),
TO = cor(data$EFF, - data$TO))
correlation_s <- correlation[1, c(order(correlation[1, ], decreasing = TRUE))]
correlation_s
barplot(as.numeric(correlation_s),
ylim = c(-1, 1),
main = 'Correlations between Player Stats and EFF',
names.arg = variable.names(correlation_s),
col = ifelse(as.numeric(correlation_s) > 0,"grey","coral1"),
border = NA,
cex.names = 0.6)
abline(h = 0)
# Create a data frame for correlation coefficients in decreasing order
correlation <- data.frame(PTS = cor(dat$EFF, PTS),
REB = cor(dat$EFF,REB),
AST = cor(dat$EFF, dat$AST),
STL = cor(dat$EFF, dat$STL),
BLK = cor(dat$EFF, dat$BLK),
Missed_FG = cor(dat$EFF, - Missed_FG),
Missed_FT = cor(dat$EFF, - Missed_FT),
TO = cor(dat$EFF, - dat$TO))
# Sort the data frame and display it
correlation_s <- correlation[1, c(order(correlation[1, ], decreasing = TRUE))]
correlation_s
# Barplot it
barplot(as.numeric(correlation_s),
ylim = c(-1, 1),
main = 'Correlations between Player Stats and EFF',
names.arg = variable.names(correlation_s),
col = ifelse(as.numeric(correlation_s) > 0,"grey","coral1"),
border = NA,
cex.names = 0.6)
abline(h = 0)
install.packages("scales")
# Scatterplot between EFF and Salary
library(scales)
plot(data$EFF, data$Salary/1000000,
main = 'Efficiency versa Salary (Million)',
xlab = 'Efficiency',
ylab = 'Salary (Million)',
las = 1,
pch = 21,
col = alpha('coral1', 0.6),
bg = alpha('coral2', 0.6))
# Lowess line
lines(lowess(dat$EFF, dat$Salary/1000000),
col = 'darkgrey',
lwd = 2)
# Correlation coefficient between them
cor(dat$EFF, dat$Salary/1000000)
# Scatterplot between EFF and Salary
library(scales)
plot(dat$EFF, dat$Salary/1000000,
main = 'Efficiency vs Salary (Million)',
xlab = 'Efficiency',
ylab = 'Salary (Million)',
las = 1,
pch = 21,
col = alpha('coral1', 0.6),
bg = alpha('coral2', 0.6))
# Lowess line
lines(lowess(dat$EFF, dat$Salary/1000000),
col = 'darkgrey',
lwd = 2)
# Correlation coefficient between them
cor(dat$EFF, dat$Salary/1000000)
# Scatterplot between EFF and Salary
library(scales)
plot(data$EFF, data$Salary/1000000,
main = 'Efficiency versa Salary (Million)',
xlab = 'Efficiency',
ylab = 'Salary (Million)',
las = 1,
pch = 21,
col = alpha('green', 0.6),
bg = alpha('yellow', 0.6))
# Lowess line
lines(lowess(dat$EFF, dat$Salary/1000000),
col = 'darkgrey',
lwd = 2)
# Correlation coefficient between them
cor(dat$EFF, dat$Salary/1000000)
# Scatterplot between EFF and Salary
library(scales)
plot(data$EFF, data$Salary/1000000,
main = 'Efficiency versa Salary (Million)',
xlab = 'Efficiency',
ylab = 'Salary (Million)',
las = 1,
pch = 21,
col = alpha('green', 0.6),
bg = alpha('red', 0.6))
# Lowess line
lines(lowess(dat$EFF, dat$Salary/1000000),
col = 'darkgrey',
lwd = 2)
# Correlation coefficient between them
cor(dat$EFF, dat$Salary/1000000)
# Scatterplot between EFF and Salary
library(scales)
plot(data$EFF, data$Salary/1000000,
main = 'Efficiency versa Salary (Million)',
xlab = 'Efficiency',
ylab = 'Salary (Million)',
las = 1,
pch = 21,
col = alpha('blue', 0.6),
bg = alpha('red', 0.6))
# Lowess line
lines(lowess(dat$EFF, dat$Salary/1000000),
col = 'darkgrey',
lwd = 2)
# Correlation coefficient between them
cor(dat$EFF, dat$Salary/1000000)
# Scatterplot between EFF and Salary
library(scales)
plot(data$EFF, data$Salary/1000000,
main = 'Efficiency versa Salary (Million)',
xlab = 'Efficiency',
ylab = 'Salary (Million)',
las = 1,
pch = 21,
col = alpha('blue', 0.6),
bg = alpha('red', 0.6))
# Lowess line
lines(lowess(dat$EFF, dat$Salary/1000000),
col = 'green',
lwd = 2)
# Correlation coefficient between them
cor(dat$EFF, dat$Salary/1000000)
# Add MPG to dat.
dat <- mutate(dat, MPG)
# Create a data frame with players with MPG >= 20.
players2 <- dat[dat$MPG >= 20, ]
# Create a scatterplot between Efficiency and Salary, including a lowess smooth line.
plot(players2$EFF, players2$Salary/1000000,
main = 'Efficiency vs Salary (Million)',
sub = 'For players with MPG >= 20',
xlab = 'Efficiency',
ylab = 'Salary (Million)',
las = 1,
pch = 21,
col = alpha('coral1', 0.6),
bg = alpha('coral2', 0.6))
lines(lowess(players2$EFF, players2$Salary/1000000),
col = 'darkgrey',
lwd = 2)
# Compute the linear correlation coefficient between these variables.
cor(players2$EFF, players2$Salary)
# Add MPG to dat.
dat <- mutate(dat, MPG)
# Create a data frame with players with MPG >= 20.
players2 <- dat[dat$MPG >= 20, ]
# Create a scatterplot between Efficiency and Salary, including a lowess smooth line.
plot(players2$EFF, players2$Salary/1000000,
main = 'Efficiency vs Salary (Million)',
sub = 'For players with MPG >= 20',
xlab = 'Efficiency',
ylab = 'Salary (Million)',
las = 1,
pch = 21,
col = alpha('blue', 0.6),
bg = alpha('red', 0.6))
lines(lowess(players2$EFF, players2$Salary/1000000),
col = 'green',
lwd = 2)
# Compute the linear correlation coefficient between these variables.
cor(players2$EFF, players2$Salary)
# Add MPG to dat.
dat <- mutate(dat, MPG)
# Create a data frame with players with MPG >= 20.
players2 <- dat[dat$MPG >= 20, ]
# Create a scatterplot between Efficiency and Salary, including a lowess smooth line.
plot(players2$EFF, players2$Salary/1000000,
main = 'Efficiency vs Salary (Million)',
sub = 'For players with MPG >= 20',
xlab = 'Efficiency',
ylab = 'Salary (Million)',
las = 1,
pch = 21,
col = alpha('coral1', 0.6),
bg = alpha('coral2', 0.6))
lines(lowess(players2$EFF, players2$Salary/1000000),
col = 'darkgrey',
lwd = 2)
# Compute the linear correlation coefficient between these variables.
cor(players2$EFF, players2$Salary)
# download RData file into your working directory
github <- "https://github.com/ucb-stat133/stat133-fall-2017/raw/master/"
csv <- "data/nba2017-players.csv"
download.file(url = paste0(github, csv), destfile = 'nba2017-players.csv')
help("read.table")
?read.table
install.packages()
load(ggplot2)
?LOAD
?load
man(ggplot2)
help(ggplot2)
help(read.csv)
help("read.csv")
x <- c(1,2,3,4,5,6,7,8,9,10)
head(x[1:5])
head(x,5)
TRUE <- x>5
x[x>5]
1:3^2
1:3^2
var <- 3
var*2
var
Var
x <- 2
2x <- 2*x
NAN
a number
rep(c(1,2,3),2)
rep(123,2)
x <- matrix(1:12,nrow = 4,ncol = 3,byrow = TRUE)
x
??:
help(";")
?";"
?":"
head(x,n=5)
x <- c(1,2,3,4,5,6,7,8,9,10)
head(x,n=5)
x <- c(2,4,6,8,10,12,14)
x[1:5]
x[c(1,2,3,4,5)]
x[seq(1.5)]
x[seq(1,5)]
x(1:5)
library(ggplot2)
library(ggplot2)
library("ggplot2")
install.packages("ggplot2")
library("ggplot2")
library("dplyr")
library("dplyr")
library("ggplot2")
library(ggplot2)
install.packages("dplyr")
library(ggplot2)
library(dplyr)
library(readr)
install.packages("readr")
library(ggplot2)
library(dplyr)
library(readr)
library(scales)
setwd("/Users/ariel/stat133/stat133-hws-fall17/hw03")
teams <- read_csv('./data/nba2017-teams.csv')
teams %>% ggplot() + geom_bar(aes(x=reorder(team, salary), y=salary/1e6), stat="Identity") +
geom_hline(yintercept = mean(teams$salary) / 1e6, color = "red", size = 2)+
coord_flip() +
xlab("Team") + ylab("Salary (in millions)") +
ggtitle("NBA Teams ranked by Total Salary")
library(ggplot2)
library(dplyr)
library(readr)
library(scales)
setwd("/Users/ariel/stat133/stat133-hws-fall17/hw03")
teams <- read_csv('./data/nba2017-teams.csv')
teams %>% ggplot() + geom_bar(aes(x=reorder(team, salary), y=salary/1e6), stat="Identity",row.name = TRUE) +
geom_hline(yintercept = mean(teams$salary) / 1e6, color = "red", size = 2)+
coord_flip() +
xlab("Team") + ylab("Salary (in millions)") +
ggtitle("NBA Teams ranked by Total Salary")
library(ggplot2)
library(dplyr)
library(readr)
library(scales)
setwd("/Users/ariel/stat133/stat133-hws-fall17/hw03")
teams <- read_csv('./data/nba2017-teams.csv')
teams <- data.frame(teams,row.name = FALSE)
teams %>% ggplot() + geom_bar(aes(x=reorder(team, salary), y=salary/1e6), stat="Identity") +
geom_hline(yintercept = mean(teams$salary) / 1e6, color = "red", size = 2)+
coord_flip() +
xlab("Team") + ylab("Salary (in millions)") +
ggtitle("NBA Teams ranked by Total Salary")
library(ggplot2)
library(dplyr)
library(readr)
library(scales)
setwd("/Users/ariel/stat133/stat133-hws-fall17/hw03")
teams <- read_csv('./data/nba2017-teams.csv')
teams <- data.frame(teams,row.name = TRUE)
teams %>% ggplot() + geom_bar(aes(x=reorder(team, salary), y=salary/1e6), stat="Identity") +
geom_hline(yintercept = mean(teams$salary) / 1e6, color = "red", size = 2)+
coord_flip() +
xlab("Team") + ylab("Salary (in millions)") +
ggtitle("NBA Teams ranked by Total Salary")
library(ggplot2)
library(dplyr)
library(readr)
library(scales)
setwd("/Users/ariel/stat133/stat133-hws-fall17/hw03")
teams <- read_csv('./data/nba2017-teams.csv')
df <- data.frame( data_teams = "teams",data_salary = "salary")
library(ggplot2)
library(dplyr)
library(readr)
library(scales)
setwd("/Users/ariel/stat133/stat133-hws-fall17/hw03")
teams <- read_csv('./data/nba2017-teams.csv')
df <- data.frame( data_teams = "teams",data_salary = "salary")
library(ggplot2)
library(dplyr)
library(scales)
setwd("/Users/ariel/stat133/stat133-hws-fall17/hw03")
teams <- read_csv('./data/nba2017-teams.csv')
df <- data.frame( data_teams = "teams",data_salary = "salary")
library(ggplot2)
library(dplyr)
setwd("/Users/ariel/stat133/stat133-hws-fall17/hw03")
teams <- read_csv('./data/nba2017-teams.csv')
df <- data.frame( data_teams = "teams",data_salary = "salary")
setwd("/Users/ariel/stat133/stat133-hws-fall17/hw03")
teams <- read_csv('./data/nba2017-teams.csv')
df <- data.frame( data_teams = "teams",data_salary = "salary")
setwd("/Users/ariel/stat133/stat133-hws-fall17/hw03")
teams <- read_csv('./data/nba2017-teams.csv')
setwd("/Users/ariel/stat133/stat133-hws-fall17/hw03")
